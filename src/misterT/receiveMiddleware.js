'use strict';

var extend = require('util')._extend

const sessions = {}

const findOrCreateSession = (userId) => {
  let sessionId;
  // Let's see if we already have a session for the user fbid
  Object.keys(sessions).forEach(k => {
    if (sessions[k].user_id === userId) {
      // Yep, got it!
      sessionId = k;
    }
  });
  if (!sessionId) {
    // No session found for user fbid, let's create a new one
    sessionId = `${userId}-${new Date().toISOString()}`;
    sessions[sessionId] = {fbid: userId, context: {}};
  }
  return sessionId;
};

module.exports = function(wit) {
  return function (bot, message, next) {
    //Avoid text payload generated by buttons in Facebook Messenger
    if (message.text && message.text.indexOf("_") == -1 && !message.bot_id && !message.payload && !message.attachments && !message.quick_reply) {

      bot.api.users.info({ user: message.user }, (error, response) => {
        bot.startConversation(message, (err, conv) => {
          const sessionId = findOrCreateSession(response.user.name)
          wit.runActions(sessionId, message.text, extend({conversation: () => conv}, sessions[sessionId].context))
            .then(context => {
              sessions[sessionId].context = context;
              next();
            })
            .catch(err => {
              next();
            })
        })

      })


    } else {
      message.entities = {};
      next();
    }
  };
}
